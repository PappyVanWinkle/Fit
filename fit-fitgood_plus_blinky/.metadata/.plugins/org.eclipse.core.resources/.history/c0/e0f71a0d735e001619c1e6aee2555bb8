/****************************************************************************\
**
** fit_demo.c
**
** Sample Sentinel FIT licensing for embedded devices demo
**
** Copyright (C) 2016, SafeNet, Inc. All rights reserved.
**
\****************************************************************************/

#include <stdlib.h>
#include <string.h>

#include "fit_api.h"
#include "internal.h"
#include "hwdep.h"
#include "mem_read.h"
#include "fit_debug.h"
#include "mbedtls/config.h"
#include "mbedtls/platform.h"
#include "mbedtls/pk.h"
#include "fit_pubkey.h"

/*
 * Below samples of the current license models supported. You should uncomment the one 
 * you would like to use. The licenses correspond to the two license demo xml from the
 * bin directory.
 */


/*
 * - expiry date license
 * 
const unsigned char license[] = {
                   0x02,0x00,0x00,0x00,0x00,0x00,0x76,0x00,0x00,0x00,
                   0x02,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,
                   0x02,0x00,0xca,0x00,0x92,0x01,0x62,0x00,0x00,0x00,
                   0x5e,0x00,0x00,0x00,0x02,0x00,0x09,0x00,0x00,0x00,
                   0x54,0x00,0x00,0x00,0x50,0x00,0x00,0x00,0x02,0x00,
                   0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x8b,0x92,
                   0x00,0x00,0x3e,0x00,0x00,0x00,0x03,0x00,0x0c,0x00,
                   0x01,0x00,0x00,0x00,0x32,0x00,0x00,0x00,0x2e,0x00,
                   0x00,0x00,0x02,0x00,0x0c,0x00,0x00,0x00,0x24,0x00,
                   0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
                   0x10,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x01,0x00,
                   0x04,0x00,0x04,0x00,0x00,0x00,0x01,0x00,0x06,0x00,
                   0x04,0x00,0x00,0x00,0x00,0x7a,0x49,0x5a,0x10,0x01,
                   0x00,0x00,0x0c,0x01,0x00,0x00,0x03,0x00,0x03,0x00,
                   0x04,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x77,0x25,
                   0xc4,0x36,0xa2,0xa6,0xec,0x2b,0x8a,0x26,0xba,0x49,
                   0x54,0xf1,0x15,0xda,0x67,0xf9,0x61,0x01,0xff,0xaf,
                   0x22,0xf7,0x03,0x81,0x75,0x41,0x6a,0xf0,0x32,0xc6,
                   0x80,0xc6,0x3c,0x78,0x3e,0xe0,0xb2,0x85,0x49,0x03,
                   0x5a,0x06,0xc5,0x21,0x72,0x33,0xc7,0x86,0xe1,0x6b,
                   0x1c,0xa8,0x42,0x45,0xec,0x3d,0xcb,0x7f,0x9c,0x89,
                   0xae,0xf1,0x35,0xed,0x23,0xc7,0xc5,0xcd,0x2e,0x95,
                   0x67,0x54,0xdc,0x82,0x85,0xbf,0x9c,0x74,0xdf,0x92,
                   0xaf,0xc4,0x04,0x3a,0xf2,0xf3,0xd8,0x2e,0x3e,0xae,
                   0x5b,0xee,0xbb,0xd7,0xeb,0xf2,0x1a,0x91,0x4e,0x37,
                   0x1f,0x99,0x8c,0x7b,0x46,0x08,0x63,0x77,0x4a,0x02,
                   0x74,0x57,0xfa,0x17,0xe8,0x6e,0xc7,0x28,0xde,0x60,
                   0xa0,0x0e,0x68,0x39,0x4d,0xd2,0xd5,0x28,0xac,0x43,
                   0xe1,0x32,0xd7,0xff,0x26,0x83,0x7f,0x00,0xb0,0xd4,
                   0xde,0x06,0x8b,0xcc,0x81,0x3a,0xb7,0x47,0x4a,0x1d,
                   0x05,0x4b,0xd7,0xbd,0x06,0xf2,0xee,0x84,0x3e,0x82,
                   0x53,0x8b,0x88,0x77,0x9e,0x20,0xf5,0x1b,0x8d,0xa8,
                   0x92,0x28,0xad,0x1f,0x13,0xf6,0xd1,0x77,0x37,0xe0,
                   0x2c,0x3f,0x25,0x09,0x6f,0x8a,0x92,0x72,0x12,0x72,
                   0xb8,0xf3,0x93,0xd0,0x3f,0x14,0x70,0x15,0x3d,0x82,
                   0x88,0xe4,0x8d,0x8d,0xe7,0x04,0x59,0x7c,0xb7,0xac,
                   0x39,0x80,0x8d,0x86,0x5e,0xd2,0x3a,0x4f,0x10,0x71,
                   0xe1,0x88,0x5d,0x69,0x7a,0x8c,0xc3,0x2f,0x01,0x80,
                   0xad,0x6b,0xd7,0x74,0x80,0x9a,0xc8,0xdf,0x7b,0xd9,
                   0x36,0x73,0x2f,0x39,0x60,0x5e,0x15,0xbc,0xab,0x84,
                   0xfd,0xf4,0xec,0xf7 };
*/
/*
 * perpetual license

 const unsigned char license[] =
 {0x02,0x00,0x00,0x00,0x00,0x00,0x8e,0x00,0x00,0x00,
                    0x02,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,
                    0x02,0x00,0x02,0x02,0x02,0x02,0x7a,0x00,0x00,0x00,
                    0x76,0x00,0x00,0x00,0x02,0x00,0x09,0x00,0x00,0x00,
                    0x6c,0x00,0x00,0x00,0x68,0x00,0x00,0x00,0x02,0x00,
                    0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x8b,0x92,
                    0x00,0x00,0x56,0x00,0x00,0x00,0x03,0x00,0x06,0x00,
                    0x01,0x00,0x00,0x00,0x4a,0x00,0x00,0x00,0x26,0x00,
                    0x00,0x00,0x02,0x00,0x04,0x00,0x00,0x00,0x1c,0x00,
                    0x00,0x00,0x03,0x00,0x00,0x00,0x03,0x00,0x00,0x00,
                    0x08,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x01,0x00,
                    0x04,0x00,0x04,0x00,0x00,0x00,0xc4,0x97,0x69,0x58,
                    0x1c,0x00,0x00,0x00,0x02,0x00,0x06,0x00,0x00,0x00,
                    0x12,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x04,0x00,
                    0x08,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x01,0x00,
                    0x06,0x00,0x10,0x01,0x00,0x00,0x0c,0x01,0x00,0x00,
                    0x03,0x00,0x03,0x00,0x04,0x00,0x00,0x00,0x00,0x01,
                    0x00,0x00,0x32,0xe2,0xce,0x9f,0x21,0xb1,0x64,0xae,
                    0x4a,0xaa,0xcc,0x2f,0x15,0xcf,0x7a,0xf0,0xe2,0xc0,
                    0x34,0x45,0x7b,0xf1,0x25,0xed,0x6c,0x7b,0x4d,0xbf,
                    0x74,0xc0,0x09,0x7c,0xa0,0x7e,0x79,0x54,0x34,0x9d,
                    0x88,0x14,0x48,0xfe,0xa7,0x8a,0xf2,0xeb,0xfd,0xa1,
                    0xf8,0xfd,0xbe,0x09,0x2a,0xfc,0x06,0xea,0xad,0x52,
                    0x1c,0xeb,0xba,0x18,0x06,0x72,0x5d,0x40,0xfc,0x9a,
                    0x1b,0xf1,0x4c,0xa8,0xf7,0x9b,0xc9,0x1a,0xd7,0x6a,
                    0x27,0x86,0xa4,0x82,0xcd,0x29,0xe4,0x74,0x39,0x4c,
                    0x7e,0x8d,0xfb,0x91,0xcf,0xad,0xf0,0xb9,0xbc,0xd6,
                    0x25,0x4f,0xbb,0xa7,0xac,0x01,0xc4,0xec,0x8d,0xf9,
                    0x6b,0x84,0x52,0x11,0x74,0xed,0xd7,0xbb,0xe4,0xd7,
                    0xf2,0x82,0xd5,0x12,0xee,0xd2,0x34,0xb9,0x38,0x31,
                    0xf1,0x29,0x4c,0xbf,0xcf,0x3a,0x77,0x96,0x2a,0xce,
                    0x4b,0xd1,0x23,0x1a,0xe3,0xaa,0x81,0x5b,0x21,0x3d,
                    0x3b,0xd8,0xd1,0xb4,0xa4,0x21,0x39,0x34,0x8b,0x9f,
                    0xf1,0x06,0x2a,0xe9,0xa0,0x9e,0x8d,0x67,0x1c,0x95,
                    0x20,0xf2,0xfa,0x75,0x2e,0xe6,0xe0,0x1c,0xca,0x1f,
                    0x0e,0x38,0xc0,0x81,0x5b,0xc6,0x4c,0x21,0xfb,0x86,
                    0x89,0xaa,0x50,0xc9,0xdf,0xde,0x5d,0x1d,0xeb,0xf2,
                    0x48,0x6e,0xc8,0xd5,0xd8,0xc5,0xea,0x66,0x3a,0xdf,
                    0x2c,0xa5,0x10,0x6e,0x4a,0x9b,0xf0,0xb9,0xc8,0x18,
                    0xfb,0x79,0xf1,0x9d,0x51,0x96,0xf8,0xae,0x63,0x63,
                    0xdd,0x89,0x79,0x99,0xc3,0x5f,0xa7,0x5f,0xce,0x4e,
                    0x00,0xa2,0xf7,0x3f,0xbe,0xc0,0x05,0x37,0x84,0xd3,
                    0x7a,0x8c,0x1f,0xe1,0xcc,0x5c,0xae,0xdd };
 */
//Perpetual, Tiva_Temperature (f5):
 char license[] = {0x02,0x00,0x00,0x00,0x00,0x00,0x64,0x00,0x00,0x00,
                   0x02,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,
                   0x02,0x00,0x02,0x02,0x02,0x02,0x50,0x00,0x00,0x00,
                   0x4c,0x00,0x00,0x00,0x02,0x00,0x09,0x00,0x00,0x00,
                   0x42,0x00,0x00,0x00,0x3e,0x00,0x00,0x00,0x02,0x00,
                   0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x8b,0x92,
                   0x00,0x00,0x2c,0x00,0x00,0x00,0x03,0x00,0x08,0x00,
                   0x01,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x1c,0x00,
                   0x00,0x00,0x02,0x00,0x04,0x00,0x00,0x00,0x12,0x00,
                   0x00,0x00,0x02,0x00,0x00,0x00,0x04,0x00,0x08,0x00,
                   0x00,0x00,0x04,0x00,0x00,0x00,0x01,0x00,0x0c,0x00,
                   0x10,0x01,0x00,0x00,0x0c,0x01,0x00,0x00,0x03,0x00,
                   0x03,0x00,0x04,0x00,0x00,0x00,0x00,0x01,0x00,0x00,
                   0x50,0xb2,0x88,0x38,0x82,0x8f,0xc3,0x03,0x15,0xaa,
                   0x04,0xf6,0xb6,0x0c,0x63,0x8e,0x9d,0x9f,0x1a,0xa9,
                   0xbf,0x2f,0x54,0x03,0x2f,0x0e,0xa4,0xbb,0x1f,0x81,
                   0x90,0xf9,0xc3,0x05,0xe7,0x03,0x5c,0x6a,0x91,0xf8,
                   0xef,0x66,0x6b,0xf4,0x26,0x29,0x52,0xef,0x69,0x39,
                   0x22,0xa0,0x51,0x47,0x63,0x99,0x18,0x63,0xdc,0x53,
                   0x40,0x09,0x51,0x41,0x22,0xd2,0xb8,0x71,0x41,0xf1,
                   0x6d,0x78,0x59,0x84,0x2e,0x82,0x4d,0x6c,0xd2,0x53,
                   0x81,0x07,0x5b,0x01,0x64,0x7e,0xfd,0xe3,0xba,0x31,
                   0x70,0x6b,0x09,0xe2,0x42,0xcd,0xb6,0x5a,0xde,0x81,
                   0x06,0xde,0x30,0x37,0xc2,0x2f,0x65,0x05,0x84,0x76,
                   0x9c,0x66,0xbe,0xe6,0x1d,0xf7,0x86,0xa9,0xb2,0x02,
                   0xae,0x6a,0xa1,0x11,0x43,0x74,0x06,0xc3,0x6a,0x98,
                   0xd7,0x09,0xc9,0xbe,0x8c,0x9f,0xb2,0x13,0x5f,0x44,
                   0xbf,0xde,0xf2,0xfd,0x13,0xba,0x25,0xe5,0x66,0x59,
                   0x5b,0x20,0xbb,0xdf,0x7c,0x28,0x64,0x5e,0x9c,0xe7,
                   0x5c,0x28,0x97,0x22,0x94,0x5f,0x6d,0xc7,0x02,0xe5,
                   0x83,0xdb,0x96,0x11,0x7c,0x5f,0xa6,0x9e,0xa6,0x2c,
                   0xac,0xb2,0x83,0xa7,0x7c,0x10,0x8a,0x05,0x63,0x12,
                   0x92,0x64,0x51,0x9e,0xd4,0x21,0x1d,0xd5,0x0b,0xa7,
                   0x49,0xc5,0xf3,0xf6,0xd9,0x53,0xa5,0xf1,0x7e,0x05,
                   0x10,0x30,0x2a,0xb7,0x92,0x19,0x77,0xb5,0xeb,0x3a,
                   0x17,0xb5,0x9a,0xef,0xb3,0x00,0x97,0x16,0xab,0x34,
                   0xa1,0x9b,0x04,0x8c,0xe4,0xc7,0x5e,0x6b,0xb7,0x47,
                   0x31,0xc0,0x64,0xba,0x15,0x95,0x0d,0xf6,0x86,0xef,
                   0xf6,0x72,0x67,0xa1,0x02,0x69 };

/****************************************************************************/

void setup(void)
{
    fit_board_setup();

    /*
     * Set current time to current unixtime. You can customize that according to
     * your hardware capabilities
     */
    FIT_TIME_SET(1453730468); /* Jan 25, 2016 */

    fit_led_off();
}

/****************************************************************************/

int main(void)
{
    fit_status_t     status   = FIT_STATUS_OK;
    fitcontextdata context  = {0};
    uint8_t getinfodata[1024] = {0};
    uint16_t getinfolen       = sizeof(getinfodata);
    uint32_t current_time     = 0;
    uint32_t last_time        = 0;
    fit_pointer_t fitptrlic = {0};
    fit_pointer_t fitptrkey = {0};

    setup(); /* initialize UART and LED ports */

    DBG(FIT_TRACE_INFO, "\nTest case: Consume feature in License ---------\n");

    /*
     * call consume license for license in the RAM
     */
    fitptrlic.data = (uint8_t *) license;
    fitptrlic.length = sizeof(license);
    fitptrlic.read_byte = (fit_read_byte_callback_t) READ_BYTE_RAM;

    fitptrkey.data = (uint8_t *) pubkey;
    fitptrkey.length = sizeof(pubkey);
    fitptrkey.read_byte = (fit_read_byte_callback_t) READ_BYTE_RAM;

    fit_trace_flags = 0;
    status = fit_licenf_consume_license(&fitptrlic, 95, &context, &fitptrkey);
    fit_trace_flags = FIT_TRACE_ALL;
    DBG(FIT_TRACE_INFO, "fit_licenf_consume_license status: %d: %s\n", status, fit_get_error_str(status));
    //MAH
    fit_trace_flags = 0;
    //MAH
        if (FIT_STATUS_OK == status) {
        fit_led_on();
    } else {
        fit_led_off();
    }
    fit_trace_flags = FIT_TRACE_ALL;
    DBG(FIT_TRACE_INFO, "\nTest case:Get Info ---------\n");
    fit_trace_flags = 0;
    status = fit_testgetinfodata(&fitptrlic, getinfodata, &getinfolen);
    fit_trace_flags = FIT_TRACE_ALL;

    if (status == FIT_STATUS_OK) {
        DBG(FIT_TRACE_INFO, "Test Case: Get license information passed successfully.\n");
    } else {
        DBG(FIT_TRACE_ERROR, "Test Case: Get license information failed, status %d %s\n",
                             status, fit_get_error_str(status));
    }

    /*
     * Test RTC i.e. see if interupt for incrementing unix time is working or not.
     */
    DBG(FIT_TRACE_INFO, "\nTest case: RTC interupt ---------\n");
    fit_getunixtime(&current_time);
    DBG(FIT_TRACE_INFO, "waiting for RTC increment ... ");
    last_time = current_time;
    while (last_time == current_time) {
        fit_trace_flags = 0;
        fit_getunixtime(&current_time);
        fit_trace_flags = FIT_TRACE_ALL;
    }
    DBG(FIT_TRACE_INFO, "\nRTC incremented to %u - OK\n", current_time);
}

/****************************************************************************/


